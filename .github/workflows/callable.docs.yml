name: Update docs

on:
  workflow_call:
    inputs:
      VERSION:
        description: 'Version name'
        required: true
        type: string
    secrets:
      GH_PAGES_TOKEN:
        required: true
      OSSRH_USERNAME:
        required: true
      OSSRH_PASSWORD:
        required: true
      SIGNING_SECRET:
        required: true
      SIGNING_PASSWORD:
        required: true
      APARTIUM_NEXUS_USERNAME:
        required: true
      APARTIUM_NEXUS_PASSWORD:
        required: true

permissions:
  pull-requests: write
  contents: write
  repository-projects: write
  packages: write
  pages: write
  id-token: write

env:
  INSTANCE: 'Writerside/w'
  ARTIFACT: 'webHelpHI2-all.zip'
  DOCKER_VERSION: '233.14938'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  upload:
    runs-on: ubuntu-latest
    env:
      new_version: ${{ inputs.VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install SSH Client ðŸ”‘
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_TOKEN }}

      - name: Setup git
        run: sh build-scripts/setup-git.sh

      - name: Fetch previous version
        id: perv_version
        run: |
          git fetch origin
          echo "::set-output name=version::$(git tag -l | sort -V | tail -n 1)"

      - name: Determine version changes
        id: determine_version
        run: |
          git fetch origin
          CURRENT_VERSION=${{ steps.perv_version.outputs.version }}
          INPUT_VERSION=${{ inputs.VERSION }}
          
          CURRENT_VERSION=${CURRENT_VERSION#v}
          INPUT_VERSION=${INPUT_VERSION#v}
          
          IFS='.' read -ra CURRENT <<< "$CURRENT_VERSION"
          IFS='.' read -ra INPUT <<< "$INPUT_VERSION"
          
          echo "Current version array: ${CURRENT[@]}"
          echo "Input version array: ${INPUT[@]}"
          
          echo "::set-output name=is_minor::$([ "${INPUT[0]}" == "${CURRENT[0]}" ] && [ "${INPUT[1]}" == "${CURRENT[1]}" ] && [ "${INPUT[2]}" != "${CURRENT[2]}" ] && echo true || echo false)"

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Pre writerside
        env:
          new_version: ${{ inputs.VERSION }}
        run: sh build-scripts/pre-writerside.sh

      - name: javadoc
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          APARTIUM_NEXUS_USERNAME: ${{ secrets.APARTIUM_NEXUS_USERNAME }}
          APARTIUM_NEXUS_PASSWORD: ${{ secrets.APARTIUM_NEXUS_PASSWORD }}
          VERSION: ${{ inputs.VERSION }}
        run: ./gradlew build

      - name: Build Writerside docs using Docker
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: run docs script
        env:
          docs: ${{ inputs.VERSION }}
        run: |
          if [ ! -d $docs ]; then
            mkdir $docs
            unzip artifacts/webHelpW2-all.zip -d $docs
          
            mkdir -p $docs/shared
            mkdir -p $docs/paper
            mkdir -p $docs/adventure
          
            ls $docs/
            cp -a shared/build/docs/javadoc/* $docs/shared
            cp -a paper/build/docs/javadoc/* $docs/paper
            cp -a adventure/build/docs/javadoc/* $docs/adventure
          
            git fetch origin
            git checkout gh-pages || git checkout origin gh-pages
            git add $docs/
            git commit -m "Output ready"
          
            git push -u origin gh-pages
          fi

      - name: Update docs
        env:
          version: ${{ github.event.inputs.name }}
          perv_version: ${{ steps.perv_version.outputs.version }}
          is_minor: steps.determine_version.outputs.is_minor
        run: sh build-scripts/docs.sh