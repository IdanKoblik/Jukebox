name: Pages

on:
  push:
    branches:
      - pages

jobs:
  pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install SSH Client ðŸ”‘
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_TOKEN }}

      - name: Setup git
        run: |
          git remote rm origin
          git remote add origin git@github.com:${{ github.repository }}
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          
      - name: Fetch previous version
        id: perv_version
        run: |
          git fetch origin
          echo "::set-output name=version::$(git tag -l | sort -V | tail -n 2)"

      - name: Fetch current version
        id: current_version
        run: |
          git fetch origin
          echo "::set-output name=version::$(git tag -l | sort -V | tail -n 2 | head -n 1)"

      - name: Determine version changes
        id: determine_version
        run: |
            git fetch origin
            CURRENT_VERSION=${{ steps.perv_version.outputs.version }}
            INPUT_VERSION=${{ steps.current_version.outputs.version }}
            
            CURRENT_VERSION=${CURRENT_VERSION#v}
            INPUT_VERSION=${INPUT_VERSION#v}
            
            IFS='.' read -ra CURRENT <<< "$CURRENT_VERSION"
            IFS='.' read -ra INPUT <<< "$INPUT_VERSION"
            
            echo "Current version array: ${CURRENT[@]}"
            echo "Input version array: ${INPUT[@]}"
            
            echo "::set-output name=is_minor::$([ "${INPUT[0]}" == "${CURRENT[0]}" ] && [ "${INPUT[1]}" == "${CURRENT[1]}" ] && [ "${INPUT[2]}" != "${CURRENT[2]}" ] && echo true || echo false)"
          
      - name: Update html
        env:
          version: ${{ steps.current_version.outputs.version }}
        run: |
          sed -i 's|url=https://idankoblik.github.io/Jukebox/[^/]*/">|url=https://idankoblik.github.io/Jukebox/'"$version"'/">|' "index.html"
          git add index.html
          git commit -m "Update index.html"

      - name: Override docs
        if: steps.determine_version.outputs.is_minor == 'true'
        env:
          version: ${{ steps.current_version.outputs.version }}
          perv_version: ${{ steps.perv_version.outputs.version }}
        run: |
              if [ -d "$perv_version" ]; then
              echo "Creating old version directory for version $perv_version"
              git rm -rf $perv_version/
              git commit -m "Removed old version"

              git add $version/
              json_file="help-versions.json"

              new_element=$(cat <<EOF
              {
              "version": "$version",
              "url": "/\($version)\/",
              "isCurrent": true
              } 
              EOF
              )

              updated_json=$(jq --arg version "$version" '
                   .[-1].version = $version |
                   .[-1].url = "/\($version)\/" |
                   .[-1].isCurrent = true |
                   .[0:-1] |= map(.isCurrent = false)
               ' "$json_file")

              echo "$updated_json" > "$json_file"

              git add help-versions.json
              git commit -m "Override docs in github pages branch" || echo "No changes to commit"
              else
               echo "NOT GOOD"
               exit 1
              fi

      - name: Update docs
        if: steps.determine_version.outputs.is_minor == 'false'
        env:
            version: ${{ steps.current_version.outputs.version }}
        run: |
              json_file="help-versions.json"

                new_element=$(cat <<EOF
              {
              "version": "$version",
              "url": "/$version/",
              "isCurrent": true
              } 
              EOF
              )

               updated_json=$(jq --argjson new "$new_element" '
                   map(.isCurrent = false) + [$new]
               ' "$json_file")

               echo "$updated_json" > "$json_file"

               git add help-versions.json
               git commit -m "Update docs in github pages branch" || echo "No changes to commit"
      - name: push
        run: |
          git push origin pages

  upload:
    needs: pages
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .